version: "3.9"
services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: email_processing
    ports:
      - "5432:5432"
    volumes:
      - "./migrations:/docker-entrypoint-initdb.d"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d email_processing"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: .
    environment:
      - DATABASE_URL=postgresql://dev:dev@db:5432/email_processing
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - IMAP_HOST=mailhog
      - IMAP_PORT=1025
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    volumes:
      - ".:/app"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8025"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    image: node:20-alpine
    command: sh -c "npm i && npm run dev -- --host"
    working_dir: /app/frontend  
    volumes:
      - ".:/app"
    ports:
      - "3000:3000"
    depends_on:
      - backend
